apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    controller-tools.k8s.io: "1.0"
  name: wordpresses.wordpress.presslabs.org
spec:
  group: wordpress.presslabs.org
  names:
    kind: Wordpress
    plural: wordpresses
  scope: Namespaced
  subresources:
    scale:
      specReplicasPath: .spec.replicas
      statusReplicasPath: .status.replicas
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          properties:
            affinity:
              description: If specified, the pod's scheduling constraints
              type: object
            bootstrap:
              description: WordpressBootstrapSpec specifies credentials used to install
                wordpress, on the first run.
              properties:
                env:
                  description: Env defines environment variables for bootstrapping
                    WordPress +patchMergeKey=name +patchStrategy=merge
                  items:
                    type: object
                  type: array
                envFrom:
                  description: EnvFrom defines envFrom's which get passed into wordpress
                    bootstrapper
                  items:
                    type: object
                  type: array
              type: object
            code:
              description: CodeVolumeSpec specifies how the site's code gets mounted
                into the container. If not specified, a code volume won't get mounted
                at all.
              properties:
                configSubPath:
                  description: 'ConfigSubPath specifies where within the code volumes
                    the config directory is located. Defaults to: config'
                  type: string
                contentSubPath:
                  description: 'ContentSubPath specifies where within the code volumes,
                    the WP_CONTENT_DIR is located. Defaults to: wp-content'
                  type: string
                emptyDir:
                  description: EmptyDir to use if no HostPath is specified
                  type: object
                git:
                  description: GitDir specifies the git repo to use for code cloning.
                    It has the highest level of precedence over EmptyDir, HostPath
                    and PersistentVolumeClaim
                  properties:
                    emptyDir:
                      description: EmptyDir volume to use for git cloning.
                      type: object
                    env:
                      description: Env defines env variables  which get passed to
                        the git clone container +patchMergeKey=name +patchStrategy=merge
                      items:
                        type: object
                      type: array
                    envFrom:
                      description: EnvFrom defines envFrom which get passed to the
                        git clone container
                      items:
                        type: object
                      type: array
                    reference:
                      description: GitRef to clone (can be a branch name, but it should
                        point to a tag or a commit hash)
                      type: string
                    repository:
                      description: Repository is the git repository for the code
                      type: string
                  required:
                  - repository
                  type: object
                hostPath:
                  description: HostPath to use if no PersistentVolumeClaim is specified
                  type: object
                mountPath:
                  description: MountPath specifies where should the code volume be
                    mounted. Defaults to /app/web/wp-content
                  type: string
                persistentVolumeClaim:
                  description: PersistentVolumeClaim to use if no GitDir is specified
                  type: object
                readOnly:
                  description: ReadOnly specifies if the volume should be mounted
                    read-only inside the wordpress runtime container
                  type: boolean
              type: object
            domains:
              description: 'Domains for which this this site answers. The first item
                is set as the "main domain" (eg. WP_HOME and WP_SITEURL constants).
                DEPRECATED: use Routes instead. This field will be dropped in next
                release.'
              items:
                type: string
              type: array
            env:
              description: Env defines environment variables which get passed into
                web and cli pods +patchMergeKey=name +patchStrategy=merge
              items:
                type: object
              type: array
            envFrom:
              description: EnvFrom defines envFrom's which get passed into web and
                cli containers
              items:
                type: object
              type: array
            image:
              description: WordPress runtime image to use. Defaults to quay.io/presslabs/wordpress-runtime:<latest
                stable runtime tag>
              type: string
            imagePullPolicy:
              description: ImagePullPolicy overrides WordpressRuntime spec.imagePullPolicy
              enum:
              - Always
              - IfNotPresent
              - Never
              type: string
            imagePullSecrets:
              description: ImagePullSecrets defines additional secrets to use when
                pulling images
              items:
                type: object
              type: array
            ingressAnnotations:
              description: IngressAnnotations for this Wordpress site
              type: object
            initContainers:
              description: Additional init containers
              items:
                type: object
              type: array
            media:
              description: MediaVolumeSpec specifies how media files get mounted into
                the runtime container. If not specified, a media volume won't be mounted
                at all.
              properties:
                contentSubPath:
                  description: ContentSubPath specifies where within the media volume,
                    the media files are located.
                  type: string
                emptyDir:
                  description: EmptyDir to use if no HostPath is specified
                  type: object
                gcs:
                  description: GCSVolumeSource specifies the google cloud storage
                    object storage configuration for media files. It has the highest
                    level of precedence over EmptyDir, HostPath and PersistentVolumeClaim
                  properties:
                    bucket:
                      description: Bucket for storing media files
                      minLength: 1
                      type: string
                    env:
                      description: 'Env variables for accessing gcs bucket. Taken
                        into account are: GOOGLE_APPLICATION_CREDENTIALS_JSON +patchMergeKey=name
                        +patchStrategy=merge'
                      items:
                        type: object
                      type: array
                    prefix:
                      description: PathPrefix is the prefix for media files in bucket
                      type: string
                  required:
                  - bucket
                  type: object
                hostPath:
                  description: HostPath to use if no PersistentVolumeClaim is specified
                  type: object
                mountPath:
                  description: MountPath specifies where should the media volume be
                    mounted. Defaults to '/uploads' folder within the CodeVolumeSpec.MountPath
                  type: string
                persistentVolumeClaim:
                  description: PersistentVolumeClaim to use if no S3VolumeSource or
                    GCSVolumeSource are specified
                  type: object
                s3:
                  description: S3VolumeSource specifies the S3 object storage configuration
                    for media files. It has the highest level of precedence over EmptyDir,
                    HostPath and PersistentVolumeClaim
                  properties:
                    bucket:
                      description: Bucket for storing media files
                      minLength: 1
                      type: string
                    env:
                      description: 'Env variables for accessing S3 bucket. Taken into
                        account are: ACCESS_KEY, SECRET_ACCESS_KEY +patchMergeKey=name
                        +patchStrategy=merge'
                      items:
                        type: object
                      type: array
                    prefix:
                      description: PathPrefix is the prefix for media files in bucket
                      type: string
                  required:
                  - bucket
                  type: object
              type: object
            nodeSelector:
              description: If specified, Pod node selector
              type: object
            priorityClassName:
              description: If specified, indicates the pod's priority class
              type: string
            replicas:
              description: Number of desired web pods. This is a pointer to distinguish
                between explicit zero and not specified. Defaults to 1.
              format: int32
              type: integer
            resources:
              description: 'If specified, the resources required by wordpress container.
                More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
              type: object
            routes:
              description: Routes for which the ingress is created The first item
                is set the WP_HOME and WP_SITEURL constants. If no routes are specified,
                ingress syncing is disabled and WP_HOME de defaults to NAME.NAMESPACE.svc.
              items:
                properties:
                  domain:
                    description: Domain for the route
                    minLength: 1
                    type: string
                  path:
                    description: The path for the route. Defaults to /.
                    type: string
                required:
                - domain
                - path
                type: object
              type: array
            serviceAccountName:
              description: 'ServiceAccountName is the name of the ServiceAccount to
                use to run this site''s pods More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/'
              type: string
            sidecars:
              description: Additional sidecar containers (eg. blackfire or tideways
                agent)
              items:
                type: object
              type: array
            tlsSecretRef:
              description: TLSSecretRef a secret containing the TLS certificates for
                this site.
              type: string
            tolerations:
              description: If specified, the pod's tolerations.
              items:
                type: object
              type: array
            volumeMounts:
              description: VolumeMountsSpec defines additional mounts which get injected
                into web and cli pods.
              items:
                type: object
              type: array
            volumes:
              description: Volumes defines additional volumes to get injected into
                web and cli pods
              items:
                type: object
              type: array
            wordpressPathPrefix:
              description: WordpressPathPrefix is the path prefix under which wordpress
                is available. It defaults to /wp.
              type: string
          type: object
        status:
          properties:
            conditions:
              description: Conditions represents the Wordpress resource conditions
                list.
              items:
                properties:
                  lastTransitionTime:
                    description: Last time the condition transitioned from one status
                      to another.
                    format: date-time
                    type: string
                  lastUpdateTime:
                    description: The last time this condition was updated.
                    format: date-time
                    type: string
                  message:
                    description: A human readable message indicating details about
                      the transition.
                    type: string
                  reason:
                    description: The reason for the condition's last transition.
                    type: string
                  status:
                    description: Status of the condition, one of True, False, Unknown.
                    type: string
                  type:
                    description: Type of Wordpress condition.
                    type: string
                required:
                - type
                - status
                - lastTransitionTime
                - reason
                - message
                type: object
              type: array
            replicas:
              description: Total number of non-terminated pods targeted by web deployment
                This is copied over from the deployment object
              format: int32
              type: integer
          type: object
  version: v1alpha1
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    controller-tools.k8s.io: "1.0"
  name: mysqlclusters.mysql.presslabs.org
spec:
  additionalPrinterColumns:
  - JSONPath: .status.conditions[?(@.type == "Ready")].status
    description: The cluster status
    name: Ready
    type: string
  - JSONPath: .spec.replicas
    description: The number of desired nodes
    name: Replicas
    type: integer
  - JSONPath: .metadata.creationTimestamp
    name: Age
    type: date
  group: mysql.presslabs.org
  names:
    kind: MysqlCluster
    plural: mysqlclusters
  scope: Namespaced
  subresources:
    scale:
      specReplicasPath: .spec.replicas
      statusReplicasPath: .status.readyNodes
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          properties:
            backupRemoteDeletePolicy:
              description: BackupRemoteDeletePolicy the deletion policy that specify
                how to treat the data from remote storage. By default it's used softDelete.
              type: string
            backupSchedule:
              description: Specify under crontab format interval to take backups leave
                it empty to deactivate the backup process Defaults to ""
              type: string
            backupScheduleJobsHistoryLimit:
              description: If set keeps last BackupScheduleJobsHistoryLimit Backups
              format: int64
              type: integer
            backupSecretName:
              description: Represents the name of the secret that contains credentials
                to connect to the storage provider to store backups.
              type: string
            backupURL:
              description: Represents an URL to the location where to put backups.
              type: string
            image:
              description: To specify the image that will be used for mysql server
                container. If this is specified then the mysqlVersion is used as source
                for MySQL server version.
              type: string
            initBucketSecretName:
              type: string
            initBucketURI:
              description: Same as InitBucketURL but is DEPRECATED
              type: string
            initBucketURL:
              description: A bucket URL that contains a xtrabackup to initialize the
                mysql database.
              type: string
            maxSlaveLatency:
              description: MaxSlaveLatency represents the allowed latency for a slave
                node in seconds. If set then the node with a latency grater than this
                is removed from service.
              format: int64
              type: integer
            minAvailable:
              description: The number of pods from that set that must still be available
                after the eviction, even in the absence of the evicted pod Defaults
                to 50%
              type: string
            mysqlConf:
              description: A map[string]string that will be passed to my.cnf file.
              type: object
            mysqlVersion:
              description: 'Represents the MySQL version that will be run. The available
                version can be found here: https://github.com/presslabs/mysql-operator/blob/0fd4641ce4f756a0aab9d31c8b1f1c44ee10fcb2/pkg/util/constants/constants.go#L87
                This field should be set even if the Image is set to let the operator
                know which mysql version is running. Based on this version the operator
                can take decisions which features can be used. Defaults to 5.7'
              type: string
            podSpec:
              description: Pod extra specification
              properties:
                affinity:
                  type: object
                annotations:
                  type: object
                imagePullPolicy:
                  type: string
                imagePullSecrets:
                  items:
                    type: object
                  type: array
                labels:
                  type: object
                nodeSelector:
                  type: object
                priorityClassName:
                  type: string
                resources:
                  type: object
                serviceAccountName:
                  type: string
                tolerations:
                  items:
                    type: object
                  type: array
              type: object
            queryLimits:
              description: QueryLimits represents limits for a query
              properties:
                ignoreCommands:
                  description: IgnoreCommands the list of commands to be ignored.
                  items:
                    type: string
                  type: array
                ignoreDb:
                  description: IgnoreDb is the list of database that are ignored by
                    pt-kill (--ignore-db flag).
                  items:
                    type: string
                  type: array
                ignoreUser:
                  description: IgnoreUser the list of users to be ignored.
                  items:
                    type: string
                  type: array
                kill:
                  description: Kill represents the mode of which the matching queries
                    in each class will be killed, (the --victims flag). Can be one
                    of oldest|all|all-but-oldest. By default, the matching query with
                    the highest Time value is killed (the oldest query.
                  type: string
                killMode:
                  description: 'KillMode can be: `connection` or `query`, when it''s
                    used `connection` means that when a query is matched the connection
                    is killed (using --kill flag) and if it''s used `query` means
                    that the query is killed (using --kill-query flag)'
                  type: string
                maxIdleTime:
                  description: MaxIdleTime match queries that have been idle for longer
                    then this time, in seconds. (--idle-time flag) + optional
                  format: int64
                  type: integer
                maxQueryTime:
                  description: MaxQueryTime match queries that have been running for
                    longer then this time, in seconds. This field is required. (--busy-time
                    flag)
                  format: int64
                  type: integer
              required:
              - maxQueryTime
              type: object
            readOnly:
              description: Makes the cluster READ ONLY. Set the master to writable
                or ReadOnly
              type: boolean
            replicas:
              description: The number of pods. This updates replicas filed Defaults
                to 0
              format: int32
              type: integer
            secretName:
              description: The secret name that contains connection information to
                initialize database, like USER, PASSWORD, ROOT_PASSWORD and so on
                This secret will be updated with DB_CONNECT_URL and some more configs.
                Can be specified partially
              maxLength: 63
              minLength: 1
              type: string
            serverIDOffset:
              description: Set a custom offset for Server IDs.  ServerID for each
                node will be the index of the statefulset, plus offset
              format: int64
              type: integer
            tmpfsSize:
              description: TmpfsSize if specified, mounts a tmpfs of this size into
                /tmp
              type: string
            volumeSpec:
              description: PVC extra specifiaction
              properties:
                emptyDir:
                  description: EmptyDir to use as data volume for mysql. EmptyDir
                    represents a temporary directory that shares a pod's lifetime.
                  type: object
                hostPath:
                  description: HostPath to use as data volume for mysql. HostPath
                    represents a pre-existing file or directory on the host machine
                    that is directly exposed to the container.
                  type: object
                persistentVolumeClaim:
                  description: PersistentVolumeClaim to specify PVC spec for the volume
                    for mysql data. It has the highest level of precedence, followed
                    by HostPath and EmptyDir. And represents the PVC specification.
                  type: object
              type: object
          required:
          - secretName
          type: object
        status:
          properties:
            conditions:
              description: Conditions contains the list of the cluster conditions
                fulfilled
              items:
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime
                    format: date-time
                    type: string
                  message:
                    description: Message
                    type: string
                  reason:
                    description: Reason
                    type: string
                  status:
                    description: Status of the condition, one of (\"True\", \"False\",
                      \"Unknown\")
                    type: string
                  type:
                    description: type of cluster condition, values in (\"Ready\")
                    type: string
                required:
                - type
                - status
                - lastTransitionTime
                - reason
                - message
                type: object
              type: array
            nodes:
              description: Nodes contains informations from orchestrator
              items:
                properties:
                  conditions:
                    items:
                      properties:
                        lastTransitionTime:
                          format: date-time
                          type: string
                        status:
                          type: string
                        type:
                          type: string
                      required:
                      - type
                      - status
                      - lastTransitionTime
                      type: object
                    type: array
                  name:
                    type: string
                required:
                - name
                type: object
              type: array
            readyNodes:
              description: ReadyNodes represents number of the nodes that are in ready
                state
              format: int64
              type: integer
          type: object
  version: v1alpha1
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    controller-tools.k8s.io: "1.0"
  name: mysqlbackups.mysql.presslabs.org
spec:
  group: mysql.presslabs.org
  names:
    kind: MysqlBackup
    plural: mysqlbackups
  scope: Namespaced
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          properties:
            backupSecretName:
              description: BackupSecretName the name of secrets that contains the
                credentials to access the bucket. Default is used the secret specified
                in cluster.
              type: string
            backupURL:
              description: BackupURL represents the URL to the backup location, this
                can be partially specifyied. Default is used the one specified in
                the cluster.
              type: string
            clusterName:
              description: ClustterName represents the cluster for which to take backup
              type: string
            remoteDeletePolicy:
              description: RemoteDeletePolicy the deletion policy that specify how
                to treat the data from remote storage. By default it's used softDelete.
              type: string
          required:
          - clusterName
          type: object
        status:
          properties:
            completed:
              description: Completed indicates whether the backup is in a final state,
                no matter whether its' corresponding job failed or succeeded
              type: boolean
            conditions:
              description: Conditions represents the backup resource conditions list.
              items:
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime
                    format: date-time
                    type: string
                  message:
                    description: Message
                    type: string
                  reason:
                    description: Reason
                    type: string
                  status:
                    description: Status of the condition, one of (\"True\", \"False\",
                      \"Unknown\")
                    type: string
                  type:
                    description: type of cluster condition, values in (\"Ready\")
                    type: string
                required:
                - type
                - status
                - lastTransitionTime
                - reason
                - message
                type: object
              type: array
          type: object
  version: v1alpha1
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: certificaterequests.cert-manager.io
spec:
  additionalPrinterColumns:
  - JSONPath: .status.conditions[?(@.type=="Ready")].status
    name: Ready
    type: string
  - JSONPath: .spec.issuerRef.name
    name: Issuer
    priority: 1
    type: string
  - JSONPath: .status.conditions[?(@.type=="Ready")].message
    name: Status
    priority: 1
    type: string
  - JSONPath: .metadata.creationTimestamp
    description: CreationTimestamp is a timestamp representing the server time when
      this object was created. It is not guaranteed to be set in happens-before order
      across separate operations. Clients may not set this value. It is represented
      in RFC3339 form and is in UTC.
    name: Age
    type: date
  group: cert-manager.io
  preserveUnknownFields: false
  names:
    kind: CertificateRequest
    listKind: CertificateRequestList
    plural: certificaterequests
    shortNames:
    - cr
    - crs
    singular: certificaterequest
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: CertificateRequest is a type to represent a Certificate Signing
        Request
      type: object
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: CertificateRequestSpec defines the desired state of CertificateRequest
          type: object
          required:
          - csr
          - issuerRef
          properties:
            csr:
              description: Byte slice containing the PEM encoded CertificateSigningRequest
              type: string
              format: byte
            duration:
              description: Requested certificate default Duration
              type: string
            isCA:
              description: IsCA will mark the resulting certificate as valid for signing.
                This implies that the 'cert sign' usage is set
              type: boolean
            issuerRef:
              description: IssuerRef is a reference to the issuer for this CertificateRequest.  If
                the 'kind' field is not set, or set to 'Issuer', an Issuer resource
                with the given name in the same namespace as the CertificateRequest
                will be used.  If the 'kind' field is set to 'ClusterIssuer', a ClusterIssuer
                with the provided name will be used. The 'name' field in this stanza
                is required at all times. The group field refers to the API group
                of the issuer which defaults to 'cert-manager.io' if empty.
              type: object
              required:
              - name
              properties:
                group:
                  type: string
                kind:
                  type: string
                name:
                  type: string
            usages:
              description: Usages is the set of x509 actions that are enabled for
                a given key. Defaults are ('digital signature', 'key encipherment')
                if empty
              type: array
              items:
                description: 'KeyUsage specifies valid usage contexts for keys. See:
                  https://tools.ietf.org/html/rfc5280#section-4.2.1.3      https://tools.ietf.org/html/rfc5280#section-4.2.1.12
                  Valid KeyUsage values are as follows: "signing", "digital signature",
                  "content commitment", "key encipherment", "key agreement", "data
                  encipherment", "cert sign", "crl sign", "encipher only", "decipher
                  only", "any", "server auth", "client auth", "code signing", "email
                  protection", "s/mime", "ipsec end system", "ipsec tunnel", "ipsec
                  user", "timestamping", "ocsp signing", "microsoft sgc", "netscape
                  sgc"'
                type: string
                enum:
                - signing
                - digital signature
                - content commitment
                - key encipherment
                - key agreement
                - data encipherment
                - cert sign
                - crl sign
                - encipher only
                - decipher only
                - any
                - server auth
                - client auth
                - code signing
                - email protection
                - s/mime
                - ipsec end system
                - ipsec tunnel
                - ipsec user
                - timestamping
                - ocsp signing
                - microsoft sgc
                - netscape sgc
        status:
          description: CertificateStatus defines the observed state of CertificateRequest
            and resulting signed certificate.
          type: object
          properties:
            ca:
              description: Byte slice containing the PEM encoded certificate authority
                of the signed certificate.
              type: string
              format: byte
            certificate:
              description: Byte slice containing a PEM encoded signed certificate
                resulting from the given certificate signing request.
              type: string
              format: byte
            conditions:
              type: array
              items:
                description: CertificateRequestCondition contains condition information
                  for a CertificateRequest.
                type: object
                required:
                - status
                - type
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime is the timestamp corresponding
                      to the last status change of this condition.
                    type: string
                    format: date-time
                  message:
                    description: Message is a human readable description of the details
                      of the last transition, complementing reason.
                    type: string
                  reason:
                    description: Reason is a brief machine readable explanation for
                      the condition's last transition.
                    type: string
                  status:
                    description: Status of the condition, one of ('True', 'False',
                      'Unknown').
                    type: string
                    enum:
                    - "True"
                    - "False"
                    - Unknown
                  type:
                    description: Type of the condition, currently ('Ready', 'InvalidRequest').
                    type: string
            failureTime:
              description: FailureTime stores the time that this CertificateRequest
                failed. This is used to influence garbage collection and back-off.
              type: string
              format: date-time
  version: v1alpha2
  versions:
  - name: v1alpha2
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: certificates.cert-manager.io
spec:
  additionalPrinterColumns:
  - JSONPath: .status.conditions[?(@.type=="Ready")].status
    name: Ready
    type: string
  - JSONPath: .spec.secretName
    name: Secret
    type: string
  - JSONPath: .spec.issuerRef.name
    name: Issuer
    priority: 1
    type: string
  - JSONPath: .status.conditions[?(@.type=="Ready")].message
    name: Status
    priority: 1
    type: string
  - JSONPath: .metadata.creationTimestamp
    description: CreationTimestamp is a timestamp representing the server time when
      this object was created. It is not guaranteed to be set in happens-before order
      across separate operations. Clients may not set this value. It is represented
      in RFC3339 form and is in UTC.
    name: Age
    type: date
  group: cert-manager.io
  preserveUnknownFields: false
  names:
    kind: Certificate
    listKind: CertificateList
    plural: certificates
    shortNames:
    - cert
    - certs
    singular: certificate
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: Certificate is a type to represent a Certificate from ACME
      type: object
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: CertificateSpec defines the desired state of Certificate. A
            valid Certificate requires at least one of a CommonName, DNSName, or URISAN
            to be valid.
          type: object
          required:
          - issuerRef
          - secretName
          properties:
            commonName:
              description: CommonName is a common name to be used on the Certificate.
                The CommonName should have a length of 64 characters or fewer to avoid
                generating invalid CSRs.
              type: string
            dnsNames:
              description: DNSNames is a list of subject alt names to be used on the
                Certificate.
              type: array
              items:
                type: string
            duration:
              description: Certificate default Duration
              type: string
            ipAddresses:
              description: IPAddresses is a list of IP addresses to be used on the
                Certificate
              type: array
              items:
                type: string
            isCA:
              description: IsCA will mark this Certificate as valid for signing. This
                implies that the 'cert sign' usage is set
              type: boolean
            issuerRef:
              description: IssuerRef is a reference to the issuer for this certificate.
                If the 'kind' field is not set, or set to 'Issuer', an Issuer resource
                with the given name in the same namespace as the Certificate will
                be used. If the 'kind' field is set to 'ClusterIssuer', a ClusterIssuer
                with the provided name will be used. The 'name' field in this stanza
                is required at all times.
              type: object
              required:
              - name
              properties:
                group:
                  type: string
                kind:
                  type: string
                name:
                  type: string
            keyAlgorithm:
              description: KeyAlgorithm is the private key algorithm of the corresponding
                private key for this certificate. If provided, allowed values are
                either "rsa" or "ecdsa" If KeyAlgorithm is specified and KeySize is
                not provided, key size of 256 will be used for "ecdsa" key algorithm
                and key size of 2048 will be used for "rsa" key algorithm.
              type: string
              enum:
              - rsa
              - ecdsa
            keyEncoding:
              description: KeyEncoding is the private key cryptography standards (PKCS)
                for this certificate's private key to be encoded in. If provided,
                allowed values are "pkcs1" and "pkcs8" standing for PKCS#1 and PKCS#8,
                respectively. If KeyEncoding is not specified, then PKCS#1 will be
                used by default.
         